@import "bourbon/bourbon";
@import "config";

/*-- CUSTOM GRID SYSTEM --*/

.gutter{padding-left:  $gutter; padding-right: $gutter;}
[class^="col_"], [class*=" col_"]{
  &.halfgutter{padding: 0 $gutter/2; min-height: 1px;}
  &.nogutter  {padding: 0; min-height: 1px;}
  &.vmid {vertical-align: middle;}
  &.vbot {vertical-align: bottom;}
  min-height: 1px;
  padding-left:  $gutter;
  padding-right: $gutter;
  display: inline-block;
  vertical-align: top;
}

.row{
  width: 100%;
  clear: both;
  &:after, &:before{
    clear: both;
  }
  &.nogutter{
    padding-left:  $gutter; padding-right: $gutter;
    [class^="col_"], [class*=" col_"] {padding: 0;min-height: 1px;}
  }
  &.halfgutter{
    padding-left:  $gutter/2; padding-right: $gutter /2;
    [class^="col_"], [class*=" col_"] {padding: 0 $gutter/2; min-height: 1px;}
  }
  @if $enable_flexbox {
    /*-- FLEXBOX GRID --*/
    &.flex{
      width: 100%;
      @include display(flex);
      @include flex-wrap(wrap);
      &.flex_direction_row{@include flex-direction(row);}
      &.flex_direction_column{@include flex-direction(column);}
      &.flex_wrap{@include flex-wrap(wrap);}
      &.flex_nowrap{@include flex-wrap(nowrap);}
      &.flex_justify_start{@include justify-content(flex-start);}
      &.flex_justify_end{@include justify-content(flex-end);}
      &.flex_justify_center{@include justify-content(center);}
      &.flex_justify_between{@include justify-content(space-between);}
      &.flex_justify_around{@include justify-content(space-around);}
      &.flex_align_start{@include align-items(flex-start);}
      &.flex_align_end{@include align-items(flex-end);}
      &.flex_align_center{@include align-items(center);}
      &.flex_align_baseline{@include align-items(baseline);}
      &.flex_align_stretch{@include align-items(stretch);}
      [class^="col_"], [class*=" col_"]{
        @for $i from 1 through $col_number / 2 {
          &.flex_order#{$i}{@include order($i);}
        }
        display: inherit;
        > div{
          width: 100%;
        }
      }
    }
    &.noflex {
      [class^="col_"], [class*=" col_"] {
        display: inline-block;
      }
    }
  }
}

@media (min-width: $sm_from) and (max-width: $sm_to) {
  .row{
    @if $enable_flexbox {
      /*-- FLEXBOX GRID --*/
      &.sm_flex{
        width: 100%;
        @include display(flex);
        @include flex-wrap(wrap);
        &.sm_flex_direction_row{@include flex-direction(row);}
        &.sm_flex_direction_column{@include flex-direction(column);}
        &.sm_flex_wrap{@include flex-wrap(wrap);}
        &.sm_flex_nowrap{@include flex-wrap(nowrap);}
        &.sm_flex_justify_start{@include justify-content(flex-start);}
        &.sm_flex_justify_end{@include justify-content(flex-end);}
        &.sm_flex_justify_center{@include justify-content(center);}
        &.sm_flex_justify_between{@include justify-content(space-between);}
        &.sm_flex_justify_around{@include justify-content(space-around);}
        &.sm_flex_align_start{@include align-items(flex-start);}
        &.sm_flex_align_end{@include align-items(flex-end);}
        &.sm_flex_align_center{@include align-items(center);}
        &.sm_flex_align_baseline{@include align-items(baseline);}
        &.sm_flex_align_stretch{@include align-items(stretch);}
        [class^="col_"], [class*=" col_"]{
          @for $i from 1 through $col_number / 2 {
            &.sm_flex_order#{$i}{@include order($i);}
          }
          display: inherit;
          > div{
            width: 100%;
          }
        }
      }
    }
  }
}

@media (min-width: $xs_from) and (max-width: $xs_to) {
  .row{
    @if $enable_flexbox {
      /*-- FLEXBOX GRID --*/
      &.xs_flex{
        width: 100%;
        @include display(flex);
        @include flex-wrap(wrap);
        &.xs_flex_direction_row{@include flex-direction(row);}
        &.xs_flex_direction_column{@include flex-direction(column);}
        &.xs_flex_wrap{@include flex-wrap(wrap);}
        &.xs_flex_nowrap{@include flex-wrap(nowrap);}
        &.xs_flex_justify_start{@include justify-content(flex-start);}
        &.xs_flex_justify_end{@include justify-content(flex-end);}
        &.xs_flex_justify_center{@include justify-content(center);}
        &.xs_flex_justify_between{@include justify-content(space-between);}
        &.xs_flex_justify_around{@include justify-content(space-around);}
        &.xs_flex_align_start{@include align-items(flex-start);}
        &.xs_flex_align_end{@include align-items(flex-end);}
        &.xs_flex_align_center{@include align-items(center);}
        &.xs_flex_align_baseline{@include align-items(baseline);}
        &.xs_flex_align_stretch{@include align-items(stretch);}
        [class^="col_"], [class*=" col_"]{
          @for $i from 1 through $col_number / 2 {
            &.xs_flex_order#{$i}{@include order($i);}
          }
          display: inherit;
          > div{
            width: 100%;
          }
        }
      }
    }
  }
}


/*-- GRID MAKER --*/

@for $i from 1 through $col_number {
  /*-- GENERIC COLUMN --*/
  .col_#{$i} {width: 100% / $col_number * $i;}
  .col_off#{$i} {margin-left: 100% / $col_number * $i;}
}

/*-- MD COLUMN --*/
@media (min-width: $md_from) and (max-width: $md_to) {
  @for $i from 1 through $col_number {
    .md_#{$i} {width: 100% / $col_number * $i;}
    .md_off#{$i} {margin-left: 100% / $col_number * $i;}
  }
}
/*-- SM COLUMN --*/
@media (min-width: $sm_from) and (max-width: $sm_to) {
  @for $i from 1 through $col_number {
    .sm_#{$i} {width: 100% / $col_number * $i;}
    .sm_off#{$i} {margin-left: 100% / $col_number * $i;}
  }
}
/*-- XS COLUMN --*/
@media (min-width: $xs_from) and (max-width: $xs_to) {
  @for $i from 1 through $col_number {
    .xs_#{$i} {width: 100% / $col_number * $i;}
    .xs_off#{$i} {margin-left: 100% / $col_number * $i;}
  }
}