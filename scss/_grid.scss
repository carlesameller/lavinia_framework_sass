@import "config";

/*-- CUSTOM GRID SYSTEM --*/
.gutter{padding-left:  $gutter; padding-right: $gutter;}
[class^="#{$col_prefix}"], [class*=" #{$col_prefix}"], .col{
  &.halfgutter{padding: 0 $gutter/2;}
  &.nogutter  {padding: 0;}
  padding-left:  $gutter;
  padding-right: $gutter;
  flex: 0 1;
}

.row{
  width: 100%;
  display:flex;
  flex-wrap:wrap;
  &.dir_row{flex-direction:row;}
  &.dir_col{flex-direction:column;}
  &.fx_wrap{flex-wrap:wrap;}
  &.fx_nowrap{flex-wrap:nowrap;}
  &.jc_start{justify-content:flex-start;}
  &.jc_end{justify-content:flex-end;}
  &.jc_center{justify-content:center;}
  &.jc_between{justify-content:space-between;}
  &.jc_around{justify-content:space-around;}
  &.ai_start{align-items:flex-start;}
  &.ai_end{align-items:flex-end;}
  &.ai_center{align-items:center;}
  &.ai_baseline{align-items:baseline;}
  &.ai_stretch{align-items:stretch;}

  [class^="#{$lg_prefix}"], [class*=" #{$lg_prefix}"]{
    @for $i from 1 through $col_number / 2 {
      &.order#{$i}{order:($i);}
    }
    &.self_{
      &start{align-self:flex-start;}
      &end{align-self:flex-end;}
      &center{align-self:center;}
      &baseline{align-self:baseline;}
      &stretch{align-self:stretch;}
    }
  }

  &.nogutter{
    padding-left:  $gutter; padding-right: $gutter;
    [class^="#{$col_prefix}#{$lg_prefix}"], [class*=" #{$col_prefix}#{$lg_prefix}"], .col {padding: 0;}
  }
  &.halfgutter{
    padding-left:  $gutter/2; padding-right: $gutter /2;
    [class^="#{$col_prefix}#{$lg_prefix}"], [class*=" #{$col_prefix}#{$lg_prefix}"], .col {padding: 0 $gutter/2;}
  }
  @media (min-width: $md_from) and (max-width: $md_to) {
    &.#{$md_prefix}{
      &dir_row{flex-direction:row;}
      &dir_col{flex-direction:column;}
      &fx_wrap{flex-wrap:wrap;}
      &fx_nowrap{flex-wrap:nowrap;}
      &jc_start{justify-content:flex-start;}
      &jc_end{justify-content:flex-end;}
      &jc_center{justify-content:center;}
      &jc_between{justify-content:space-between;}
      &jc_around{justify-content:space-around;}
      &ai_start{align-items:flex-start;}
      &ai_end{align-items:flex-end;}
      &ai_center{align-items:center;}
      &ai_baseline{align-items:baseline;}
      &ai_stretch{align-items:stretch;}
    }

    [class^="#{$md_prefix}"], [class*=" #{$md_prefix}"]{
      @for $i from 1 through $col_number / 2 {
        &.#{$md_prefix}order#{$i}{order:($i);}
      }
      &.#{$md_prefix}self_{
        &start{align-self:flex-start;}
        &end{align-self:flex-end;}
        &center{align-self:center;}
        &baseline{align-self:baseline;}
        &stretch{align-self:stretch;}
      }
    }
  }

  @media (min-width: $sm_from) and (max-width: $sm_to) {
    &.#{$sm_prefix}{
      &dir_row{flex-direction:row;}
      &dir_col{flex-direction:column;}
      &fx_wrap{flex-wrap:wrap;}
      &fx_nowrap{flex-wrap:nowrap;}
      &jc_start{justify-content:flex-start;}
      &jc_end{justify-content:flex-end;}
      &jc_center{justify-content:center;}
      &jc_between{justify-content:space-between;}
      &jc_around{justify-content:space-around;}
      &ai_start{align-items:flex-start;}
      &ai_end{align-items:flex-end;}
      &ai_center{align-items:center;}
      &ai_baseline{align-items:baseline;}
      &ai_stretch{align-items:stretch;}
    }

    [class^="#{$sm_prefix}"], [class*=" #{$sm_prefix}"]{
      @for $i from 1 through $col_number / 2 {
        &.#{$sm_prefix}order#{$i}{order:($i);}
      }
      &.#{$sm_prefix}self_{
        &start{align-self:flex-start;}
        &end{align-self:flex-end;}
        &center{align-self:center;}
        &baseline{align-self:baseline;}
        &stretch{align-self:stretch;}
      }
    }
  }

  @media (min-width: $xs_from) and (max-width: $xs_to) {
    &.#{$xs_prefix}{
      &dir_row{flex-direction:row;}
      &dir_col{flex-direction:column;}
      &fx_wrap{flex-wrap:wrap;}
      &fx_nowrap{flex-wrap:nowrap;}
      &jc_start{justify-content:flex-start;}
      &jc_end{justify-content:flex-end;}
      &jc_center{justify-content:center;}
      &jc_between{justify-content:space-between;}
      &jc_around{justify-content:space-around;}
      &ai_start{align-items:flex-start;}
      &ai_end{align-items:flex-end;}
      &ai_center{align-items:center;}
      &ai_baseline{align-items:baseline;}
      &ai_stretch{align-items:stretch;}
    }

    [class^="#{$xs_prefix}"], [class*=" #{$xs_prefix}"]{
      @for $i from 1 through $col_number / 2 {
        &.#{$xs_prefix}order#{$i}{order:($i);}
      }
      &.#{$xs_prefix}self_{
        &start{align-self:flex-start;}
        &end{align-self:flex-end;}
        &center{align-self:center;}
        &baseline{align-self:baseline;}
        &stretch{align-self:stretch;}
      }
    }
  }
}

/*-- GRID MAKER --*/

@for $i from 1 through $col_number {
  /*-- GENERIC COLUMN --*/
  .#{$col_prefix}#{$xs_prefix}#{$i} {width: 100% / $col_number * $i;flex-basis: 100% / $col_number * $i; flex-grow: 0;}
  .#{$col_prefix}#{$xs_prefix}off#{$i} {margin-left: 100% / $col_number * $i;}
  .col_xs{
    flex-basis: 100%;
    max-width: 100%;
    width: 100%;
  }
}
@for $i from 1 through $col_number {
  .#{$col_prefix}#{$sm_prefix}#{$i} {width: 100% / $col_number * $i;flex-basis: 100% / $col_number * $i; flex-grow: 0;}
  .#{$col_prefix}#{$sm_prefix}off#{$i} {margin-left: 100% / $col_number * $i;}
  .col_sm{
    flex-basis: 0;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
    width: 100%;
  }
}
@for $i from 1 through $col_number {
  .#{$col_prefix}#{$md_prefix}#{$i} {width: 100% / $col_number * $i;flex-basis: 100% / $col_number * $i; flex-grow: 0;}
  .#{$col_prefix}#{$md_prefix}off#{$i} {margin-left: 100% / $col_number * $i;}
  .col_md{
    flex-basis: 0;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
    width: 100%;
  }
}
@for $i from 1 through $col_number {
  .#{$col_prefix}#{$lg_prefix}#{$i} {width: 100% / $col_number * $i;flex-basis: 100% / $col_number * $i; flex-grow: 0;}
  .#{$col_prefix}#{$lg_prefix}off#{$i} {margin-left: 100% / $col_number * $i;}
  .col_lg, .col{
    flex-basis: 0;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
    width: 100%;
  }
}

/*-- MD COLUMN --*/
@media (min-width: $md_from) and (max-width: $md_to) {
  @for $i from 1 through $col_number {
    .#{$col_prefix}#{$md_prefix}#{$i} {width: 100% / $col_number * $i;flex-basis: 100% / $col_number * $i; flex-grow: 0;}
  }
  @for $i from 0 through $col_number - 1 {
    .#{$col_prefix}#{$md_prefix}off#{$i} {margin-left: 100% / $col_number * $i;}
  }
}
/*-- SM COLUMN --*/
@media (min-width: $sm_from) and (max-width: $sm_to) {
  @for $i from 1 through $col_number {
    .#{$col_prefix}#{$sm_prefix}#{$i} {width: 100% / $col_number * $i;flex-basis: 100% / $col_number * $i; flex-grow: 0;}
  }
  @for $i from 0 through $col_number - 1 {
    .#{$col_prefix}#{$sm_prefix}off#{$i} {margin-left: 100% / $col_number * $i;}
  }
}
/*-- XS COLUMN --*/
@media (min-width: $xs_from) and (max-width: $xs_to) {
  @for $i from 1 through $col_number {
    .#{$col_prefix}#{$xs_prefix}#{$i} {width: 100% / $col_number * $i;flex-basis: 100% / $col_number * $i; flex-grow: 0;}
  }
  @for $i from 0 through $col_number - 1 {
    .#{$col_prefix}#{$xs_prefix}off#{$i} {margin-left: 100% / $col_number * $i;}
  }
}

@mixin breakpoint($point) {
  @if $point == md {
    @media (min-width: $md_from) and (max-width: $md_to) { @content ; }
  }
  @else if $point == xs_sm {
    @media (min-width: $sm_from) and (max-width: $sm_to) { @content ; }
  }
  @else if $point == sm {
    @media (min-width: $sm_from) and (max-width: $sm_to) { @content ; }
  }
  @else if $point == xs {
    @media (min-width: $xs_from) and (max-width: $xs_to) { @content ; }
  }
}