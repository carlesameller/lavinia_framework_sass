@import "config";

/*-- CUSTOM GRID SYSTEM --*/

.gutter{padding-left:  $gutter; padding-right: $gutter;}
[class^="#{$lg_prefix}"], [class*=" #{$lg_prefix}"]{
  &.halfgutter{padding: 0 $gutter/2; min-height: 1px;}
  &.nogutter  {padding: 0; min-height: 1px;}
  &.vmid {vertical-align: middle;}
  &.vbot {vertical-align: bottom;}
  min-height: 1px;
  padding-left:  $gutter;
  padding-right: $gutter;
  display: inline-block;
  vertical-align: top;
}

.row{
  width: 100%;
  clear: both;
  &:after, &:before{
    clear: both;
  }
  &.nogutter{
    padding-left:  $gutter; padding-right: $gutter;
    [class^="#{$lg_prefix}"], [class*=" #{$lg_prefix}"] {padding: 0;min-height: 1px;}
  }
  &.halfgutter{
    padding-left:  $gutter/2; padding-right: $gutter /2;
    [class^="#{$lg_prefix}"], [class*=" #{$lg_prefix}"] {padding: 0 $gutter/2; min-height: 1px;}
  }
  @if $enable_flexbox {
    /*-- FLEXBOX GRID --*/
    &.flex{
      width: 100%;
      display:flex;
      flex-wrap:wrap;
      &.flex_{
        &direction_row{flex-direction:row;}
        &direction_column{flex-direction:column;}
        &wrap{flex-wrap:wrap;}
        &nowrap{flex-wrap:nowrap;}
        &justify_start{justify-content:flex-start;}
        &justify_end{justify-content:flex-end;}
        &justify_center{justify-content:center;}
        &justify_between{justify-content:space-between;}
        &justify_around{justify-content:space-around;}
        &align_start{align-items:flex-start;}
        &align_end{align-items:flex-end;}
        &align_center{align-items:center;}
        &align_baseline{align-items:baseline;}
        &align_stretch{align-items:stretch;}
      }

      [class^="#{$lg_prefix}"], [class*=" #{$lg_prefix}"]{
        @for $i from 1 through $col_number / 2 {
          &.flex_order#{$i}{order:($i);}
        }
        &.flex_self_{
          &start{align-self:flex-start;}
          &end{align-self:flex-end;}
          &center{align-self:center;}
          &baseline{align-self:baseline;}
          &stretch{align-self:stretch;}
        }

        display: inherit;
        > *{
          width: 100%;
        }
      }
    }
    &.noflex {
      [class^="#{$lg_prefix}"], [class*=" #{$lg_prefix}"] {
        display: inline-block;
      }
    }
  }
}

@media (min-width: $md_from) and (max-width: $md_to) {
  .row{
    @if $enable_flexbox {
      /*-- FLEXBOX GRID --*/
      &.#{$md_prefix}flex{
        width: 100%;
        display:flex;
        flex-wrap:wrap;
        &.#{$md_prefix}flex_{
          &direction_row{flex-direction:row;}
          &direction_column{flex-direction:column;}
          &wrap{flex-wrap:wrap;}
          &nowrap{flex-wrap:nowrap;}
          &justify_start{justify-content:flex-start;}
          &justify_end{justify-content:flex-end;}
          &justify_center{justify-content:center;}
          &justify_between{justify-content:space-between;}
          &justify_around{justify-content:space-around;}
          &align_start{align-items:flex-start;}
          &align_end{align-items:flex-end;}
          &align_center{align-items:center;}
          &align_baseline{align-items:baseline;}
          &align_stretch{align-items:stretch;}
        }
        [class^="#{$lg_prefix}"], [class*=" #{$lg_prefix}"]{
          @for $i from 1 through $col_number / 2 {
            &.#{$md_prefix}flex_order#{$i}{order:($i);}
          }
          &.#{$md_prefix}flex_self_{
            &start{align-self:flex-start;}
            &end{align-self:flex-end;}
            &center{align-self:center;}
            &baseline{align-self:baseline;}
            &stretch{align-self:stretch;}
          }
          display: inherit;
          > *{
            width: 100%;
          }
        }
      }
    }
  }
}

@media (min-width: $sm_from) and (max-width: $sm_to) {
  .row{
    @if $enable_flexbox {
      /*-- FLEXBOX GRID --*/
      &.#{$sm_prefix}flex{
        width: 100%;
        display:flex;
        flex-wrap:wrap;
        &.#{$sm_prefix}flex_{
          &direction_row{flex-direction:row;}
          &direction_column{flex-direction:column;}
          &wrap{flex-wrap:wrap;}
          &nowrap{flex-wrap:nowrap;}
          &justify_start{justify-content:flex-start;}
          &justify_end{justify-content:flex-end;}
          &justify_center{justify-content:center;}
          &justify_between{justify-content:space-between;}
          &justify_around{justify-content:space-around;}
          &align_start{align-items:flex-start;}
          &align_end{align-items:flex-end;}
          &align_center{align-items:center;}
          &align_baseline{align-items:baseline;}
          &align_stretch{align-items:stretch;}
        }
        [class^="#{$lg_prefix}"], [class*=" #{$lg_prefix}"]{
          @for $i from 1 through $col_number / 2 {
            &.#{$sm_prefix}flex_order#{$i}{order:($i);}
          }
          &.#{$sm_prefix}flex_self_{
            &start{align-self:flex-start;}
            &end{align-self:flex-end;}
            &center{align-self:center;}
            &baseline{align-self:baseline;}
            &stretch{align-self:stretch;}
          }
          display: inherit;
          > *{
            width: 100%;
          }
        }
      }
    }
  }
}

@media (min-width: $xs_from) and (max-width: $xs_to) {
  .row{
    @if $enable_flexbox {
      /*-- FLEXBOX GRID --*/
      &.#{$xs_prefix}flex{
        width: 100%;
        display:flex;
        flex-wrap:wrap;
        &.#{$xs_prefix}flex_{
          &direction_row{flex-direction:row;}
          &direction_column{flex-direction:column;}
          &wrap{flex-wrap:wrap;}
          &nowrap{flex-wrap:nowrap;}
          &justify_start{justify-content:flex-start;}
          &justify_end{justify-content:flex-end;}
          &justify_center{justify-content:center;}
          &justify_between{justify-content:space-between;}
          &justify_around{justify-content:space-around;}
          &align_start{align-items:flex-start;}
          &align_end{align-items:flex-end;}
          &align_center{align-items:center;}
          &align_baseline{align-items:baseline;}
          &align_stretch{align-items:stretch;}
        }
        [class^="#{$lg_prefix}"], [class*=" #{$lg_prefix}"]{
          @for $i from 1 through $col_number / 2 {
            &.#{$xs_prefix}flex_order#{$i}{order:($i);}
          }
          &.#{$xs_prefix}flex_self_{
            &start{align-self:flex-start;}
            &end{align-self:flex-end;}
            &center{align-self:center;}
            &baseline{align-self:baseline;}
            &stretch{align-self:stretch;}
          }
          display: inherit;
          > *{
            width: 100%;
          }
        }
      }
    }
  }
}


/*-- GRID MAKER --*/

@for $i from 1 through $col_number {
  /*-- GENERIC COLUMN --*/
  .#{$lg_prefix}#{$i} {width: 100% / $col_number * $i;}
  .#{$lg_prefix}off#{$i} {margin-left: 100% / $col_number * $i;}
}

/*-- MD COLUMN --*/
@media (min-width: $md_from) and (max-width: $md_to) {
  @for $i from 1 through $col_number {
    .#{$md_prefix}#{$i} {width: 100% / $col_number * $i;}
  }
  @for $i from 0 through $col_number - 1 {
    .#{$md_prefix}off#{$i} {margin-left: 100% / $col_number * $i;}
  }
}
/*-- SM COLUMN --*/
@media (min-width: $sm_from) and (max-width: $sm_to) {
  @for $i from 1 through $col_number {
    .#{$sm_prefix}#{$i} {width: 100% / $col_number * $i;}
  }
  @for $i from 0 through $col_number - 1 {
    .#{$sm_prefix}off#{$i} {margin-left: 100% / $col_number * $i;}
  }
}
/*-- XS COLUMN --*/
@media (min-width: $xs_from) and (max-width: $xs_to) {
  @for $i from 1 through $col_number {
    .#{$xs_prefix}#{$i} {width: 100% / $col_number * $i;}
  }
  @for $i from 0 through $col_number - 1 {
    .#{$xs_prefix}off#{$i} {margin-left: 100% / $col_number * $i;}
  }
}